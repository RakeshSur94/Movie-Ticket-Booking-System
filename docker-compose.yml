version: "3.8"
services:
  eureka-server:
    build: ./movie-services-registry
    container_name: eureka-server
    #we can use docker compose up --build to build and run the image
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 0"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      - SERVER_PORT=8761
      - APPLICATION_NAME=movie-services-registry
      - REGISTER_WITH_EUREKA=false
      - FETCH_REGISTRY=false
  booking-service:
    build: ./booking-service
    container_name: booking-service
    ports:
      - "8000:8000"
    depends_on:
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    environment:
      - SERVER_PORT=8000
      - APPLICATION_NAME=booking-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka/

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "8001:8001"

    environment:
      - SERVER_PORT=8001
      - APPLICATION_NAME=payment-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8765:8765"
    environment:
      - SERVER_PORT=8765
      - APPLICATION_NAME=api-gateway
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka


  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8002:8002"
    environment:
      - SERVER_PORT=8002
      - APPLICATION_NAME=notification-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT-ZONE=http://eureka-server:8761/eureka/



